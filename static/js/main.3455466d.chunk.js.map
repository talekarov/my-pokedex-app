{"version":3,"sources":["constants.js","Pokemon.js","Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["toFirstCharUppercase","name","charAt","toUpperCase","slice","useStyles","makeStyles","cardContainer","backgroundColor","display","paddingTop","paddingLeft","paddingRight","flexDirection","whosThatPokemon","marginTop","height","padding","pokemonImage","marginBottom","button","pokemonInfo","border","borderBlockStyle","borderRadius","marginLeft","Pokemon","props","classes","match","history","pokemonId","params","useState","undefined","pokemon","setPokemon","useEffect","axios","get","then","response","data","catch","error","CircularProgress","id","species","weight","types","sprites","fullImageUrl","front_default","className","Typography","variant","src","alt","style","width","Link","href","url","map","typeInfo","type","generatePokemonJSX","Button","onClick","push","theme","pokedexContainer","appBar","cardMedia","margin","cardContent","textAlign","searchContainer","alpha","palette","common","white","paddingBottom","searchIcon","alignSelf","searchInput","Pokedex","pokemonData","setPokemonData","filter","setFilter","results","newPokemonData","forEach","index","sprite","AppBar","position","Toolbar","TextField","onChange","e","target","value","label","Grid","container","spacing","Object","keys","includes","item","xs","Card","CardMedia","image","CardContent","getPokemonCard","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3455466d.chunk.js","sourcesContent":["export const toFirstCharUppercase = name =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);","import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardContainer: {\r\n    backgroundColor: \"lightgray\",\r\n    display: \"flex\",\r\n    paddingTop: \"25px\",\r\n    paddingLeft: \"25px\",\r\n    paddingRight: \"50px\",\r\n    flexDirection: \"row\"\r\n  },\r\n\r\n  whosThatPokemon: {\r\n    marginTop: \"15px\",\r\n    height: \"150px\",\r\n    padding: \"5px\"\r\n  },\r\n\r\n  pokemonImage: {\r\n    paddingLeft: \"50px\",\r\n    marginBottom: \"20px\",\r\n\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: \"firebrick\"\r\n  },\r\n\r\n  pokemonInfo: {\r\n    border: \"solid 7px\",\r\n    borderBlockStyle: \"groove\",\r\n    borderRadius: \"5px\",\r\n    marginLeft: \"80px\",\r\n    height: \"170px\",\r\n    padding: \"50px\",\r\n    backgroundColor: \"honeydew\"\r\n  }\r\n}));\r\nconst Pokemon = (props) => {\r\n  const classes = useStyles();\r\n  const { match, history } = props;\r\n  const { params } = match;\r\n  const { pokemonId } = params;\r\n  const [pokemon, setPokemon] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n  }, [pokemonId]);\r\n\r\n  const generatePokemonJSX = (pokemon) => {\r\n    const { name, id, species, height, weight, types, sprites } = pokemon;\r\n    const fullImageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${id}.svg`;\r\n    const { front_default } = sprites;\r\n    return (\r\n      <div className={classes.cardContainer}>\r\n        <Typography variant=\"h3\" className={classes.whosThatPokemon}>\r\n          {`${id}.`} {toFirstCharUppercase(name)}\r\n          <img src={front_default} alt=\"\" />\r\n        </Typography>\r\n        <img style={{ width: \"300px\", height: \"300px\" }} className={classes.pokemonImage} src={fullImageUrl} alt=\"\" />\r\n        <div className={classes.pokemonInfo}>\r\n          <Typography variant=\"h5\">Stats:</Typography>\r\n          <Typography>\r\n            {\"Species: \"}\r\n            <Link href={species.url}>{toFirstCharUppercase(species.name)} </Link>\r\n          </Typography>\r\n          <Typography>Height: {height} </Typography>\r\n          <Typography>Weight: {weight} </Typography>\r\n          <Typography variant=\"h6\"> Types:</Typography>\r\n          {types.map((typeInfo) => {\r\n            const { type } = typeInfo;\r\n            const { name } = type;\r\n            return <Typography key={name}> {`${toFirstCharUppercase(name)}`}</Typography>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {pokemon === undefined && <CircularProgress />}\r\n      {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n      {pokemon === false && <Typography> Pokemon not found</Typography>}\r\n\r\n      {pokemon !== undefined && (\r\n        <Button variant=\"contained\" onClick={() => history.push(\"/\")} className={classes.button}>\r\n          back to pokedex\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pokemon;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CircularProgress,\r\n  Toolbar,\r\n  AppBar,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pokedexContainer: {\r\n    paddingTop: \"20px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  appBar: {\r\n      backgroundColor: \"indianred\"\r\n  },\r\n\r\n  cardMedia: {\r\n    margin: \"auto\",\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n  },\r\n  searchContainer: {\r\n    display: \"flex\",\r\n    margin: \"auto\",\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    paddingLeft: \"20px\",\r\n    paddingRight: \"20px\",\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    border: \"1px solid black\",\r\n    borderRadius: \"5px\",\r\n    paddingBottom: \"2px\"\r\n    \r\n  },\r\n  searchIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  searchInput: {\r\n    width: \"200px\",\r\n    margin: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Pokedex = (props) => {\r\n  const classes = useStyles();\r\n  const { history } = props;\r\n  const [pokemonData, setPokemonData] = useState({});\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon?limit=807`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        const { results } = data;\r\n        const newPokemonData = {};\r\n        results.forEach((pokemon, index) => {\r\n          newPokemonData[index + 1] = {\r\n            id: index + 1,\r\n            name: pokemon.name,\r\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n              index + 1\r\n            }.png`,\r\n          };\r\n        });\r\n        setPokemonData(newPokemonData);\r\n      });\r\n  }, []);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const getPokemonCard = (pokemonId) => {\r\n    const { id, name, sprite } = pokemonData[pokemonId];\r\n    return (\r\n      <Grid item xs={4} key={pokemonId}>\r\n        <Card onClick={() => history.push(`/${id}`)}>\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={sprite}\r\n            style={{ width: \"130px\", height: \"130px\" }}\r\n          />\r\n          <CardContent className={classes.cardContent}>\r\n            <Typography>{`${id}. ${toFirstCharUppercase(name)}`}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <div className={classes.searchContainer}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n            <TextField\r\n              className={classes.searchInput}\r\n              onChange={handleSearchChange}\r\n              label=\"Search\"\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {pokemonData ? (\r\n        <Grid container spacing={2} className={classes.pokedexContainer}>\r\n          {Object.keys(pokemonData).map(\r\n            (pokemonId) =>\r\n              pokemonData[pokemonId].name.includes(filter) &&\r\n              getPokemonCard(pokemonId)\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokedex;","import { Route, Switch } from \"react-router-dom\"\nimport Pokemon from \"./Pokemon\";\nimport Pokedex from \"./Pokedex\";\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" render={(props) => <Pokedex {...props} />} />\n    <Route\n      exact\n      path=\"/:pokemonId\"\n      render={(props) => <Pokemon {...props} />}\n    />\n  </Switch>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n    <App />\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}